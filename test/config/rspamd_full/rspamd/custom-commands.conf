# This is suboptimal, but not strictly required either: we do not
# need the DKIM signing & RBL functionality (which is most likely
# not set up anyway or it fails (in case of querying DNSBLs with
# public resolvers)). Hence, we disable it. It is suboptimal
# since we are testing the functionality of whether disabling
# a module works at the same time..
#
# When testing on ARM64, this is required at the moment due to
# strange behavior in Rspamd v3.2 (segmentation faults) when DKIM
# keys are not provided (notes were added to the docs).
disable-module dkim_signing
disable-module rbl

# check whether disabling a module works and whether it
# really overwrites options that came before
set-option-for-module testmodule1 someoption somevalue
disable-module testmodule1

# enabling a module and setting some options for it
enable-module testmodule2
set-option-for-module testmodule2 someoption somevalue
set-option-for-module testmodule2 anotheroption whatAvaLue

# overwriting an option (probably unwanted, we emit a warning)
set-option-for-module testmodule3 someoption somevalue1
set-option-for-module testmodule3 someoption somevalue2

# check whether adding a line works even with special characters in it
add-line testmodule4.something some very long line with "weird $charact"ers
add-line testmodule4.something and! ano. ther &line
add-line testmodule4.something # some comment

# check whether spaces in front are handles fine, for nested options
set-option-for-module testmodule_complicated anOption anotherValue

# check whether controller and proxy options are set/overwritten correctly
set-option-for-controller someOption someValue42
set-option-for-proxy abcdefg71 RaNDom
set-option-for-proxy abcdefg71 RAAAANdooM

# check whether setting basic options works (and whether spaces in values work)
set-common-option OhMy "PraiseBeLinters !"
